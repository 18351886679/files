**display**
block：块级元素，会新开始一行并尽可能撑满容器；设置width可以使块级元素不撑满一行，设置margin的左右为auto，可以使块级元素居中。但是width属性会在浏览器窗口不够宽时显示滚动条，这时候使用max-width来制定宽度
inline：行内元素，不会打乱段落布局，不开始新行，没有margin或者padding属性
none：元素不可见且不占据空间，设置visibility：hidden元素不可见还是会占据空间，通常使用js设置
box-sizing：设置为border-box，margin和padding就不会影响元素的宽度
column-count和column-gap可以使文字采用多列展示

浮动元素的负边距：设置margin-left为负数，会让元素往左边移动

**Position**
static：静态定位，block块级元素每个占据一行，inline内联元素只有当前行放不下了才会换行
relative：相对定位，相对静态定位所在位置来移动，有top，bottom，left和right属性
absolute：绝对定位，相对第一个定位不为static的父级元素的定位，如果父级元素都没有定义position属性，那就是初始容器块，初始容器块有着和浏览器视口一样的尺寸
fixed：固定定位，相对于浏览器视口本身的定位，一个常见的应用是持久导航菜单
sticky：粘性定位，相对定位和固定定位的混合，元素元素在跨越特定阈值前为相对定位，之后为固定定位。
z-index：元素重叠时的上下位置，从0开始，越大的优先展示

鼠标的点击动作会影响组件的一些属性，如checkbox的checked属性。这时，在这些属性上应用选择器，并设置样式，就可以不使用js来实现动态样式改变，但是不推荐使用，使用js更合适，这样只是比较有趣而已。

**Flexbox**
flex：设置display=flex，其子元素会平均分配width；如果是inline子元素，可以设置为inline-flex；子元素设置flex属性来设置占用比例
align-items：控制子元素在交叉轴的位置，默认是stretch拉伸子元素填充父元素的高度；flex-start，center，flex-end分别将子元素置于交叉轴的开头，中间，尾部而不拉伸子元素。子元素设置align-self可以覆盖父元素的align-items值
justify-content：控制子元素在主轴的位置：默认是flex-start，位于开头；flex-end位于结尾；center位于中间；space-around均匀分布并且在两头留下一点空间；space-between均匀分配并且在两端不留空间
order：设置子元素的order属性，来决定子元素的排序，order越大越靠后

**常用两栏、三栏布局方式**
